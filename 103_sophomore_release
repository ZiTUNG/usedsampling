### Stage 1: sampling schools ###
#install.packages('pps')
#給一個初始空的變項；設定整個抽樣程式的隨機種子為2（目的為可重製抽樣樣本）
pickn=NULL;pickn0=NULL;sampleindices=NULL;pickSch=NULL;seedn=2 
library(pps)         #引用pps套件
#依照八個分層迴圈進行學校抽樣
for (i in 1:8){     
  vec=which(sch_frame$Group.1==i)  #建立各分層學校的index
  schsize=sch_frame$x[vec]         #各分層學校數
  pickn=round(length(schsize)*0.7) #預計抽取數(學校大小的七成)
  pickn0=pickn                     
  repeat{
    set.seed(seedn)
    sampleindices<-ppss(schsize,pickn)  #使用pps
    if(length(unique(sampleindices))==pickn0)  #控制避免抽到重複學校
      {break     
    }
    pickn=pickn+1
  }
  print(paste0("Total: ",toString(length(schsize)),
               "Target: ",toString(length(schsize)*0.7),
               "Actual: ",toString(length(unique(sampleindices)))))
  print(sch_frame$Group.2[unique(sampleindices)])
  pickSch=c(pickSch,array(sch_frame$Group.2[vec[unique(sampleindices)]]))  #將每次抽中的學校合併在一起
}
  print(pickSch) #顯示抽樣結果

##################################################################
#### Stage 2: sampling staudents ###
pickStu=NULL
for (j in 1:length(pickSch)){
  vecsch=which(X$shid %in% pickSch[j])  #建立抽中各校學程的指標系統
  schdata=X[vecsch,]
  schdataagg=aggregate(schdata$TYPE,list(schdata$type_program),length) #n stu of program
  ##only 1 program（只有一個學程的學校）
  if (nrow(schdataagg)==1){
    if (schdataagg$x<=40){
      pickvec=vecsch ##all sampling全抽，若人數小於40
    }else{
      #some school, valid/invalid sample（學校有/無效樣本的條件判別）
      veceff0=which(X$shid %in% pickSch[j] & X$TYPE==0)
      veceff1=which(X$shid %in% pickSch[j] & X$TYPE==1)
      if (length(veceff1)>=40){
        set.seed(seedn);pickvec=sample(veceff1,40,0)
     }else{                
        set.seed(seedn);fillvec=sample(veceff0,40-length(veceff1),0)
        pickvec=c(veceff1,fillvec)
      }
    }
    pickStu=c(pickStu,pickvec)
  
  ##above 2 program（有兩個以上學程的學校）
  }else{
    for (s in 1:nrow(schdataagg)){ #sampling for each program該校各學程逐一抽樣
      vecsys=which(X$shid %in% pickSch[j] & X$type_program==schdataagg$Group.1[s])
      schsysdata=X[vecsys,]
      schsysdataagg=aggregate(schsysdata$TYPE,list(schsysdata$type_program),length) #n stu of sys
      if (schsysdataagg$x<=20){
        pickvec=vecsys #all sampling
      }else{
        #some school, valid/invalid sample
        veceff0=which(X$shid %in% pickSch[j] & X$type_program==schsysdataagg$Group.1 & X$TYPE==0)
        veceff1=which(X$shid %in% pickSch[j] & X$type_program==schsysdataagg$Group.1 & X$TYPE==1)
        if (length(veceff1)>=20){
          set.seed(seedn);pickvec=sample(veceff1,20,0)
       }else{
          set.seed(seedn);fillvec=sample(veceff0,20-length(veceff1),0)
          pickvec=c(veceff1,fillvec)
        }
      }
      pickStu=c(pickStu,pickvec)
    }
  }
}
  print(pickStu)
# 將中選樣本標註0,1 然後併入原始data
X$stusample=rep(0,nrow(X))
X$stusample[pickStu]=1
X$stueff2=X$TYPE*X$stusample

### 加權 ###
# 彙整以8類型分層、以學校為單位的資料(mi,sample,n,M)
strmi1=aggregate(X$shid,list(X$schtype,X$shid),length) #學校人數mi
strmi2=aggregate(X$stusample,list(X$schtype,X$shid),max) #抽中與否
strmi=merge(strmi1,strmi2,c("Group.1","Group.2")) #合併

strM=aggregate(strmi$x.x,list(strmi$Group.1),sum) #分層人數M
strn=aggregate(strmi$x.x,list(strmi$Group.1),length) #分層校數n
strData=merge(strmi,strn,"Group.1") #合併
strData=merge(strData,strM,"Group.1") #合併
colnames(strData)=c("schtype","shid","strmi","strsample","strn","strM")

# 計算Wsch
for (r in 1:nrow(strData)){
  strData$Wsch[r]=strData$strM[r]/(strData$strn[r]*strData$strmi[r])*strData$strsample[r]
}

# 計算Wstu
prgrmn=aggregate(X$stusample,list(X$shid,X$type_program),length) #學程內母體人數
prgrms=aggregate(X$stusample,list(X$shid,X$type_program),sum) #學程內抽樣人數
prgrmData=merge(prgrmn,prgrms,c("Group.1","Group.2"))
prgrmData$Wstu=prgrmData$x.x/prgrmData$x.y

# 計算Wadj
prgrmv=aggregate(X$stueff2,list(X$shid,X$type_program),sum) #學程內有效人數
prgrmData=merge(prgrmData,prgrmv,c("Group.1","Group.2"))
prgrmData$Wadj=prgrmData$x.y/prgrmData$x
colnames(prgrmData)=c("shid","type_program","prgrm_n","prgrm_s","Wstu","prgrm_v","Wadj")

# 將Wsch Wstu Wadj併回原檔
final=merge(X,strData,c("shid"))
final=merge(final,prgrmData,c("shid","type_program"),all.x = TRUE) #Left join table

final$Wsr1=final$Wsch*final$Wstu*final$Wadj*final$TYPE*final$stusample

final=final[with(final, order(final$schtype.y,-final$strmi,final$type_program)),]
final$Wsr1[is.na(final$Wsr1)]=0

#計算事後權重Wpost(性別,學校別,學程別)
postw_n=aggregate(final$Wsr1,list(final$stdsex,final$schtype.x,final$type_program),length)
postw_s=aggregate(final$Wsr1,list(final$stdsex,final$schtype.x,final$type_program),sum)
postData=merge(postw_n,postw_s,c("Group.1","Group.2","Group.3"))
colnames(postData)=c("stdsex","schtype.x","type_program","post_n","post_s")
final=merge(final,postData,c("stdsex","schtype.x","type_program"),all.x = TRUE)
final$Wpost=final$TYPE*(final$post_n/final$post_s)
final$Wsr2=final$Wsr1*final$Wpost

#以SPSS進行第四階段母體數校正權重
